{"ast":null,"code":"import _slicedToArray from \"C:/Users/Ghenov/WebstormProjects/Phoenix Technologies Code Challenge/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Ghenov\\\\WebstormProjects\\\\Phoenix Technologies Code Challenge\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./styles.scss\";\nimport { useEffect, useState } from \"react\"; // import CustomerTable from \"./components/CustomerTable\";\n\n/**\n *\n * Welcome to the Data Sorting coding challenge.\n *\n * Load json data from `/public/data.json` and render it in a table\n * using `/public/table.png` design.\n *\n * Make this behaviour reusable.\n *\n * Ask questions & have fun!\n *\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      getData = _useState2[1];\n\n  useEffect(function () {\n    fetchData();\n  }, []);\n\n  var fetchData = function fetchData() {\n    fetch(\"data.json\").then(function (res) {\n      return res.json();\n    }).then(function (response) {\n      console.log(response);\n      getData(response);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"How to display JSON data to table in React JS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"User Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), data.map(function (item, i) {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, _this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n} //     const [users, setUsers] = useState([])\n//     useEffect(() => {\n//         fetch(\"data.json\")\n//             .then(res => res.json())\n//             .then(\n//                 (result) => {\n//                     // setIsLoaded(true);\n//                     setUsers(result.users);\n//                 },\n//             )\n//     }, [])\n//\n//   return (\n//     <div className=\"App\">\n//         {users.map(el=>(\n//             <div>{el}</div>\n//         ))}\n//       {/*<CustomerTable />*/}\n//     </div>\n//   );\n// }\n\n\n_s(App, \"+8SzEMhU8cGVyeQ6sXtG4v/5EKI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","App","data","getData","fetchData","fetch","then","res","json","response","console","log","map","item","i","userId","id","name","body"],"sources":["C:/Users/Ghenov/WebstormProjects/Phoenix Technologies Code Challenge/src/App.tsx"],"sourcesContent":["import \"./styles.scss\";\nimport {useEffect, useState} from \"react\";\n\n// import CustomerTable from \"./components/CustomerTable\";\n\n/**\n *\n * Welcome to the Data Sorting coding challenge.\n *\n * Load json data from `/public/data.json` and render it in a table\n * using `/public/table.png` design.\n *\n * Make this behaviour reusable.\n *\n * Ask questions & have fun!\n *\n */\nfunction App() {\n\n    const [data, getData] = useState([])\n\n\n    useEffect(() => {\n        fetchData()\n    }, [])\n\n\n    const fetchData = () => {\n        fetch(\"data.json\")\n            .then((res) =>\n                res.json())\n\n            .then((response) => {\n                console.log(response);\n                getData(response);\n            })\n\n    }\n\n    return (\n        <>\n            <h1>How to display JSON data to table in React JS</h1>\n            <tbody>\n            <tr>\n                <th>User Id</th>\n                <th>Id</th>\n                <th>Title</th>\n                <th>Description</th>\n            </tr>\n            {data.map((item, i) => (\n                <tr key={i}>\n                    <td>{item.userId}</td>\n                    <td>{item.id}</td>\n                    <td>{item.name}</td>\n                    <td>{item.body}</td>\n                </tr>\n            ))}\n            </tbody>\n\n        </>\n    );\n}\n\n//     const [users, setUsers] = useState([])\n//     useEffect(() => {\n//         fetch(\"data.json\")\n//             .then(res => res.json())\n//             .then(\n//                 (result) => {\n//                     // setIsLoaded(true);\n//                     setUsers(result.users);\n//                 },\n//             )\n//     }, [])\n//\n//   return (\n//     <div className=\"App\">\n//         {users.map(el=>(\n//             <div>{el}</div>\n//         ))}\n//       {/*<CustomerTable />*/}\n//     </div>\n//   );\n// }\n\nexport default App;\n"],"mappings":";;;;;AAAA,OAAO,eAAP;AACA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC,C,CAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA,SAASC,GAAT,GAAe;EAAA;;EAAA;;EAEX,gBAAwBD,QAAQ,CAAC,EAAD,CAAhC;EAAA;EAAA,IAAOE,IAAP;EAAA,IAAaC,OAAb;;EAGAJ,SAAS,CAAC,YAAM;IACZK,SAAS;EACZ,CAFQ,EAEN,EAFM,CAAT;;EAKA,IAAMA,SAAS,GAAG,SAAZA,SAAY,GAAM;IACpBC,KAAK,CAAC,WAAD,CAAL,CACKC,IADL,CACU,UAACC,GAAD;MAAA,OACFA,GAAG,CAACC,IAAJ,EADE;IAAA,CADV,EAIKF,IAJL,CAIU,UAACG,QAAD,EAAc;MAChBC,OAAO,CAACC,GAAR,CAAYF,QAAZ;MACAN,OAAO,CAACM,QAAD,CAAP;IACH,CAPL;EASH,CAVD;;EAYA,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,wBACA;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHJ,eAII;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,EAOCP,IAAI,CAACU,GAAL,CAAS,UAACC,IAAD,EAAOC,CAAP;QAAA,oBACN;UAAA,wBACI;YAAA,UAAKD,IAAI,CAACE;UAAV;YAAA;YAAA;YAAA;UAAA,SADJ,eAEI;YAAA,UAAKF,IAAI,CAACG;UAAV;YAAA;YAAA;YAAA;UAAA,SAFJ,eAGI;YAAA,UAAKH,IAAI,CAACI;UAAV;YAAA;YAAA;YAAA;UAAA,SAHJ,eAII;YAAA,UAAKJ,IAAI,CAACK;UAAV;YAAA;YAAA;YAAA;UAAA,SAJJ;QAAA,GAASJ,CAAT;UAAA;UAAA;UAAA;QAAA,SADM;MAAA,CAAT,CAPD;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA,gBADJ;AAsBH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAlESb,G;;KAAAA,G;AAoET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}